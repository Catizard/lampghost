// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {vo} from '../models';
import {result} from '../models';
import {dto} from '../models';
import {entity} from '../models';
import {config} from '../models';

export function AddDiffTableHeader(arg1:vo.DiffTableHeaderVo):Promise<result.RtnMessage>;

export function AddFolder(arg1:string):Promise<result.RtnMessage>;

export function AddRivalInfo(arg1:vo.RivalInfoVo):Promise<result.RtnMessage>;

export function AddRivalTag(arg1:vo.RivalTagVo):Promise<result.RtnMessage>;

export function BindDiffTableDataToFolder(arg1:number,arg2:Array<number>):Promise<result.RtnMessage>;

export function BindRivalSongDataToFolder(arg1:number,arg2:Array<number>):Promise<result.RtnMessage>;

export function DelDiffTableHeader(arg1:number):Promise<result.RtnMessage>;

export function DelFolder(arg1:number):Promise<result.RtnMessage>;

export function DelFolderContent(arg1:number):Promise<result.RtnMessage>;

export function DelRivalInfo(arg1:number):Promise<result.RtnMessage>;

export function DeleteRivalTagByID(arg1:number):Promise<result.RtnMessage>;

export function FindCourseInfoList():Promise<result.RtnDataList>;

export function FindCourseInfoListWithRival(arg1:number):Promise<result.RtnDataList>;

export function FindDiffTableHeaderList():Promise<result.RtnDataList>;

export function FindDiffTableHeaderListWithRival(arg1:number):Promise<result.RtnDataList>;

export function FindDiffTableHeaderTree(arg1:vo.DiffTableHeaderVo):Promise<result.RtnDataList>;

export function FindDiffTableHeaderTreeWithRival(arg1:vo.DiffTableHeaderVo):Promise<result.RtnDataList>;

export function FindFolderContentList(arg1:vo.FolderContentVo):Promise<result.RtnDataList>;

export function FindFolderList(arg1:vo.FolderVo):Promise<result.RtnDataList>;

export function FindFolderTree(arg1:vo.FolderVo):Promise<result.RtnDataList>;

export function FindRivalInfoList():Promise<result.RtnDataList>;

export function FindRivalTagList(arg1:vo.RivalTagVo):Promise<result.RtnDataList>;

export function GENERATE_RIVAL_SCORE_LOG():Promise<dto.RivalScoreLogDto>;

export function GENERATE_RIVAL_SONG_DATA_DTO():Promise<dto.RivalSongDataDto>;

export function GENERATE_RIVAL_TAG():Promise<entity.RivalTag>;

export function GENERATE_RIVAL_TAG_DTO():Promise<dto.RivalTagDto>;

export function GENERATOR_COURSE_INFO():Promise<entity.CourseInfo>;

export function GENERATOR_COURSE_INFO_DTO():Promise<dto.CourseInfoDto>;

export function GENERATOR_FOLDER():Promise<entity.Folder>;

export function GENERATOR_FOLDER_CONTENT_DTO():Promise<dto.FolderContentDto>;

export function GENERATOR_FOLDER_DEFINITION_DTO():Promise<dto.FolderDefinitionDto>;

export function GENERATOR_FOLDER_DTO():Promise<dto.FolderDto>;

export function GENERATOR_RIVAL_INFO():Promise<entity.RivalInfo>;

export function GENERATOR_RIVAL_INFO_DTO():Promise<dto.RivalInfoDto>;

export function GENERATOR_TABLE_DATA():Promise<dto.DiffTableDataDto>;

export function GENERATOR_TABLE_HEADER():Promise<entity.DiffTableHeader>;

export function GENERATOR_TABLE_HEADER_DTO():Promise<dto.DiffTableHeaderDto>;

export function InitializeMainUser(arg1:vo.RivalInfoVo):Promise<result.RtnMessage>;

export function OpenFileDialog(arg1:string):Promise<result.RtnData>;

export function QueryDiffTableDataWithRival(arg1:vo.DiffTableHeaderVo):Promise<result.RtnPage>;

export function QueryDiffTableInfoById(arg1:number):Promise<result.RtnData>;

export function QueryDiffTableInfoWithRival(arg1:number,arg2:number):Promise<result.RtnData>;

export function QueryFolderDefinition():Promise<result.RtnDataList>;

export function QueryLevelLayeredDiffTableInfoByID(arg1:number):Promise<result.RtnData>;

export function QueryMainUser():Promise<result.RtnData>;

export function QueryPrevDayScoreLogList(arg1:vo.RivalScoreLogVo):Promise<result.RtnDataList>;

export function QueryRivalInfoPageList(arg1:vo.RivalInfoVo):Promise<result.RtnPage>;

export function QueryRivalPlayedYears(arg1:number):Promise<result.RtnDataList>;

export function QueryRivalScoreLogPageList(arg1:vo.RivalScoreLogVo):Promise<result.RtnPage>;

export function QueryRivalTagPageList(arg1:vo.RivalTagVo):Promise<result.RtnPage>;

export function QueryUserInfoByID(arg1:number):Promise<result.RtnData>;

export function QueryUserInfoWithLevelLayeredDiffTableLampStatus(arg1:number,arg2:number):Promise<result.RtnData>;

export function QueryUserPlayCountInYear(arg1:number,arg2:string):Promise<result.RtnDataList>;

export function ReadConfig():Promise<result.RtnData>;

export function RevertRivalTagEnabledState(arg1:number):Promise<result.RtnMessage>;

export function RunServer():Promise<void>;

export function SyncRivalDataByID(arg1:number):Promise<result.RtnMessage>;

export function SyncRivalTag(arg1:number):Promise<result.RtnMessage>;

export function UpdateDiffTableHeader(arg1:vo.DiffTableHeaderVo):Promise<result.RtnMessage>;

export function UpdateHeaderLevelOrders(arg1:vo.DiffTableHeaderVo):Promise<result.RtnMessage>;

export function UpdateHeaderOrder(arg1:Array<number>):Promise<result.RtnMessage>;

export function UpdateRivalInfo(arg1:vo.RivalInfoVo):Promise<result.RtnMessage>;

export function WriteConfig(arg1:config.ApplicationConfig):Promise<result.RtnMessage>;
